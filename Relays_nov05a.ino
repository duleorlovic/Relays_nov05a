#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/f24d631d-c36d-4a88-bede-05e21d3a23a8

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  bool relay_down;
  bool relay_up;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#define RELAY_UP_PIN 16 // D0
#define RELAY_DOWN_PIN 5 // D1

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  Serial.println("Start setup");

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  // https://github.com/arduino-libraries/Arduino_ConnectionHandler
  ArduinoIoTPreferredConnection.addCallback(NetworkConnectionEvent::DISCONNECTED, onNetworkDisconnect);
  ArduinoIoTPreferredConnection.addCallback(NetworkConnectionEvent::ERROR, onNetworkError);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(RELAY_UP_PIN, OUTPUT);
  pinMode(RELAY_DOWN_PIN, OUTPUT);
  digitalWrite(RELAY_UP_PIN, 1);  // relays IN1 is active on low
  digitalWrite(RELAY_DOWN_PIN, 1);  // relays IN1 is active on low
  digitalWrite(LED_BUILTIN, 1);
  Serial.println("Setup Finised Duke");

}
// https://github.com/arduino-libraries/Arduino_ConnectionHandler
void onNetworkConnect() {
  digitalWrite(LED_BUILTIN, 0);
  Serial.println(">>>> CONNECTED to network");
}

void onNetworkDisconnect() {
  digitalWrite(LED_BUILTIN, 1);

  Serial.println(">>>> DISCONNECTED from network");
}

void onNetworkError() {
  digitalWrite(LED_BUILTIN, 1);

  Serial.println(">>>> ERROR");
}
void loop() {
  ArduinoCloud.update();
  // Your code here
  delay(1000);
  Serial.print(".");


}


void blink(boolean two_times) {
  digitalWrite(LED_BUILTIN, HIGH);   // turn the LED off (low is active)
  delay(100);
  digitalWrite(LED_BUILTIN, LOW);    // turn the LED back to on
  if (two_times) {
    delay(100);
    digitalWrite(LED_BUILTIN, HIGH);
    delay(100);
    digitalWrite(LED_BUILTIN, LOW);
  }
}

/*
  Since RelayUp is READ_WRITE variable, onRelayUpChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRelayUpChange()  {
  digitalWrite(RELAY_UP_PIN, !relay_up);  // relays IN1 is active on low
  blink(relay_up);
  Serial.print("onRelayUpChange relay_up=");
  Serial.println(relay_up);
}

/*
  Since RelayDown is READ_WRITE variable, onRelayDownChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRelayDownChange()  {
  digitalWrite(RELAY_DOWN_PIN, !relay_down);
  blink(relay_down);

  Serial.print("onRelayDownChange relay_down=");
  Serial.println(relay_down);
}
